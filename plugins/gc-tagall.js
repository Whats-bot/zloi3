const handler = async (m, {isOwner, isAdmin, conn, text, participants, args, command, usedPrefix}) => {
  if (usedPrefix == 'a' || usedPrefix == 'A') return;
  if (!(isAdmin || isOwner)) {
    global.dfail('admin', 'owner', m, conn);
    throw false;
  }
  const pesan = args.join` `;
  const oi = `*–°–æ–æ–±—â–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º:* ${pesan}`;
  let teks = `*‚∫Äùô∏ –í–ù–ò–ú–ê–ù–ò–ï –ì–†–£–ü–ü–ê‚∫Ä*\n\n‚ùè ${oi}\n\n‚ùè *–£–ß–ê–°–¢–ù–ò–ö–ò –û–ë–†–ê–¢–ò–¢–ï –í–ù–ò–ú–ê–ù–ò–ï –ù–ê –°–û–û–ë–©–ï–ù–ò–ï –í–´–®–ï:*\n`;
  for (const mem of participants) {
    teks += `‚î£‚û• @${mem.id.split('@')[0]}\n`;
  }
  teks += `*‚îî* JoKeR\n\n*‚ñå‚îÇ‚ñà‚ïë‚ñå‚ïë‚ñå‚ïë‚ïë‚ñå‚ïë‚ñå‚ïë‚ñå‚ïë‚ñà*`;
  conn.sendMessage(m.chat, {text: teks, mentions: participants.map((a) => a.id)} );
};
handler.help = ['tagall <mesaje>', 'invocar <mesaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|–≤–Ω–∏–º–∞–Ω–∏–µ|invocacion|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;
export default handler;
