const handler = async (m, {conn, usedPrefix, command, args, isOwner, isAdmin, isROwner}) => {
  const optionsFull = `*–û–ø—Ü–∏—è:* ‚ú® | –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
*Comando:* ${usedPrefix + command} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –≥—Ä—É–ø–ø–µ)

--------------------------------

*–û–ø—Ü–∏—è:* üåé | MODO PUBLICO
*Comando:* ${usedPrefix + command} public
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º –∏/–∏–ª–∏ —á–∞—Å—Ç–Ω—ã–º.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* ü•µ | 18+
*Comando:* ${usedPrefix + command} 18+
*–û–ø–∏—Å–∞–Ω–∏–µ:* –í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã +18 –≤ –≥—Ä—É–ø–ø–µ.

--------------------------------

*–û–ø—Ü–∏—è:* üîó | –ê–ù–¢–ò–°–°–´–õ–ö–ê
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞
*–û–ø–∏—Å–∞–Ω–∏–µ:* –í–∫–ª—é—á–∏—Ç–µ –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞—â–∏—Ç—ã –æ—Ç —Å—Å—ã–ª–æ–∫ –≤ WhatsApp.
*Nota:* –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –≥—Ä—É–ø–ø–µ.

--------------------------------

*–û–ø—Ü–∏—è:* üîó | ANTILINK 2
*Comando:* ${usedPrefix + command} antilink2
*–û–ø–∏—Å–∞–Ω–∏–µ:* –í–∫–ª—é—á–∏—Ç–µ –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞—â–∏—Ç—ã –æ—Ç —Å—Å—ã–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É HTTPS.
*Nota:* –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –≥—Ä—É–ø–ø–µ.

--------------------------------

*–û–ø—Ü–∏—è:* üîé | –ò–∑–º–µ–Ω–µ–Ω–∏—è
*Comando:* ${usedPrefix + command} –∏–∑–º–µ–Ω–µ–Ω–∏—è
*–û–ø–∏—Å–∞–Ω–∏–µ:* –í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –≥—Ä—É–ø–ø–µ.

--------------------------------

*–û–ø—Ü–∏—è:* üîé | –ò–∑–º–µ–Ω–µ–Ω–∏—è 2
*Comando:* ${usedPrefix + command} –∏–∑–º–µ–Ω–µ–Ω–∏—è2
*–û–ø–∏—Å–∞–Ω–∏–µ:* –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.

--------------------------------

*–û–ø—Ü–∏—è:* ‚ùó | –ë–æ—Ç –ê–¥–º–∏–Ω
*Comando:* ${usedPrefix + command} –±–æ—Ç–∞–¥–º–∏–Ω
*–û–ø–∏—Å–∞–Ω–∏–µ:* –í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–æ—Ç–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ —É–¥–∞–ª–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª—é–¥–µ–π –≤ –≥—Ä—É–ø–ø—É.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* ‚òëÔ∏è | –ê–≤—Ç–æ—á—Ç–µ–Ω–∏–µ
*Comando:* ${usedPrefix + command} –∞–≤—Ç–æ—á—Ç–µ–Ω–∏–µ
*–û–ø–∏—Å–∞–Ω–∏–µ:* –°–æ–æ–±—â–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç—É—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–º–µ—á–∞—é—Ç—Å—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* üîä | –ê—É–¥–∏–æ
*Comando:* ${usedPrefix + command} –∞—É–¥–∏–æ
*–û–ø–∏—Å–∞–Ω–∏–µ:* –í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞—É–¥–∏–æ –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤ –≤ –≥—Ä—É–ø–ø–µ.
--------------------------------

*–û–ø—Ü–∏—è:* üëæ | –ê–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä
*Comando:* ${usedPrefix + command} –∞–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä
*–û–ø–∏—Å–∞–Ω–∏–µ:* –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –≥—Ä—É–ø–ø–µ, –±–æ—Ç –¥–µ–ª–∞–µ—Ç —Å—Ç–∏–∫–µ—Ä–∞–º–∏.
--------------------------------

*–û–ø—Ü–∏—è:* üí¨ | –õ–∏—á–∫–∞
*Comando:* ${usedPrefix + command} –ª–∏—á–∫–∞
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* üè¢ | –ì—Ä—É–ø–ø–∞
*Comando:* ${usedPrefix + command} –≥—Ä—É–ø–ø–∞
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* ‚ùå | –ê–Ω—Ç–∏—Ä–∞–∑
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏—Ä–∞–∑
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞—é—Ç—Å—è –±–æ—Ç–æ–º –≤ –≥—Ä—É–ø–ø—É.

--------------------------------

*–û–ø—Ü–∏—è:* üìµ | –ê–Ω—Ç–∏–∑–≤–æ–Ω–æ–∫
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏–∑–≤–æ–Ω–æ–∫
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–≤–æ–Ω—è—Ç –ë–æ—Ç—É.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* üí¨ | –ê–Ω—Ç–∏–ª–∏—á–∫–∞
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏–ª–∏—á–∫–∞
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–∏—à—É—Ç –≤ –ª–∏—á–∫—É –±–æ—Ç—É.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* ü§¨ | –ê–Ω—Ç–∏–º–∞—Ç
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏–º–∞—Ç
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≥—Ä—É–ø–ø—ã, –ø—Ä–µ–∂–¥–µ —á–µ–º –µ–≥–æ —É–¥–∞–ª—è—Ç.
*Nota:* –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –≥—Ä—É–ø–ø–µ.

--------------------------------

*–û–ø—Ü–∏—è:* üï∏Ô∏è | –ê–Ω—Ç–∏–≤–∏—Ä—É—Å
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏–≤–∏—Ä—É—Å
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –¥–ª–∏–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–∏—Ä—É—Å–∞–º–∏ –∏ –≤—ã–∑—ã–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –≤ —á–∞—Ç–µ, –∏ —É–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
*Nota:* –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –≥—Ä—É–ø–ø–µ.

--------------------------------

*–û–ø—Ü–∏—è:* üëé | –ê–Ω—Ç–∏–∞—Ä–∞–±
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏–∞—Ä–∞–±
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ï—Å–ª–∏ –∫ –≥—Ä—É–ø–ø–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∞—Ä–∞–±—Å–∫–∏–π –Ω–æ–º–µ—Ä, –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ.
*Nota:* –ù–µ–æ–±—Ö–æ–¥–∏–º–æ, —á—Ç–æ–±—ã –±—ã–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã –ü–†–ò–í–ï–¢–°–¢–í–ò–ï –∏ –ë–û–¢–ê–î–ú–ò–ù.

--------------------------------

*–û–ø—Ü–∏—è:* üëé | –ê–Ω—Ç–∏–∞—Ä–∞–± 2
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏–∞—Ä–∞–±2
*–û–ø–∏—Å–∞–Ω–∏–µ:* Si un numero √°rabe escribe en el grupo, el Bot lo elimina automaticamente.
*Nota:* –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –≥—Ä—É–ø–ø–µ.

--------------------------------

*–û–ø—Ü–∏—è:* ü§ñ | –î–æ–ø–±–æ—Ç
*Comando:* ${usedPrefix + command} –¥–æ–ø–±–æ—Ç
*–û–ø–∏—Å–∞–Ω–∏–µ:* –í–∫–ª—é—á–∏—Ç–µ –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤ (${usedPrefix}serbot / ${usedPrefix}jadibot).
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* üëë | –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã
*Comando:* ${usedPrefix + command} —Ç–æ–ª—å–∫–æ–∞–¥–º–∏–Ω—ã
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –≥—Ä—É–ø–ø—ã.

--------------------------------

*–û–ø—Ü–∏—è:* üòÉ | SIMSIMI
*Comando:* ${usedPrefix + command} simsimi
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –Ω–∞—á–Ω–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç SimSimi.

--------------------------------

*–û–ø—Ü–∏—è:* ‚è≥ | –ê–Ω—Ç–∏—Å–ø–∞–º
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏—Å–ø–∞–º
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –∫–æ–º–∞–Ω–¥–Ω—ã–π —Å–ø–∞–º, –±–ª–æ–∫–∏—Ä—É–µ—Ç –µ–≥–æ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç –æ–± —ç—Ç–æ–º.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.

--------------------------------

*–û–ø—Ü–∏—è:* üõ°Ô∏è | –ê–Ω—Ç–∏—É–¥–∞–ª–µ–Ω–∏–µ
*Comando:* ${usedPrefix + command} –∞–Ω—Ç–∏—É–¥–∞–ª–µ–Ω–∏–µ
*–û–ø–∏—Å–∞–Ω–∏–µ:* –ë–æ—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

--------------------------------

*–û–ø—Ü–∏—è:* üîä | –ê—É–¥–∏–æ–±–æ—Ç
*Comando:* ${usedPrefix + command} –∞—É–¥–∏–æ–±–æ—Ç
*–û–ø–∏—Å–∞–Ω–∏–µ:* –î–ª—è –≤—Å–µ—Ö –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω—ã –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –±–æ—Ç–∞ –∏–∑ –º–µ–Ω—é –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤.
*Nota:* –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ –±–æ—Ç–∞.`.trim();

  const isEnable = /–≤–∫–ª—é—á–∏—Ç—å|enable|(turn)?on|1/i.test(command);
  const chat = global.db.data.chats[m.chat];
  const user = global.db.data.users[m.sender];
  const bot = global.db.data.settings[conn.user.jid] || {};
  const type = (args[0] || '').toLowerCase();
  let isAll = false; const isUser = false;
  switch (type) {
    case '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!(isAdmin || isOwner || isROwner)) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.welcome = isEnable;
      break;
    case '–∏–∑–º–µ–Ω–µ–Ω–∏—è':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.detect = isEnable;
      break;
    case '–∏–∑–º–µ–Ω–µ–Ω–∏—è2':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.detect2 = isEnable;
      break;
    case 'simsimi':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.simi = isEnable;
      break;
    case '–∞–Ω—Ç–∏–ø–æ—Ä–Ω–æ':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiporno = isEnable;
      break;
    case '—É–¥–∞–ª–µ–Ω–∏–µ':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.delete = isEnable;
      break;
    case '–∞–Ω—Ç–∏—É–¥–∞–ª–µ–Ω–∏–µ':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antidelete = isEnable;
      break;
    case '–ø—É–±–ª–∏—á–Ω—ã–π':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['self'] = !isEnable;
      break;
    case '–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiLink = isEnable;
      break;
    case '–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiLink2 = isEnable;
      break;
    case '–∞–Ω—Ç–∏—Ä–∞–∑':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiviewonce = isEnable;
      break;
    case '18+':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.modohorny = isEnable;
      break;
    case '—Ç–æ–ª—å–∫–æ–∞–¥–º–∏–Ω—ã':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.modoadmin = isEnable;
      break;
    case '–∞–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.autosticker = isEnable;
      break;
    case '–∞—É–¥–∏–æ':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.audios = isEnable;
      break;
    case '–±–æ—Ç–∞–¥–º–∏–Ω':
      isAll = true;
      if (!isOwner) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.restrict = isEnable;
      break;
    case '–∞—É–¥–∏–æ–±–æ—Ç':
      isAll = true;
      if (!isOwner) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.audios_bot = isEnable;      
      break;
    case 'nyimak':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['nyimak'] = isEnable;
      break;
    case 'autoread':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.autoread2 = isEnable;
      global.opts['autoread'] = isEnable;
      break;
    case '–ª–∏—á–∫–∞':
    case 'privateonly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['pconly'] = isEnable;
      break;
    case '–≥—Ä—É–ø–ø–∞':
    case 'grouponly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['gconly'] = isEnable;
      break;
    case 'swonly':
    case 'statusonly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['swonly'] = isEnable;
      break;
    case '–∞–Ω—Ç–∏–∑–≤–æ–Ω–æ–∫':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.antiCall = isEnable;
      break;
    case '–∞–Ω—Ç–∏–ª–∏—á–∫–∞':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.antiPrivate = isEnable;
      break;
    case 'modejadibot':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.modejadibot = isEnable;
      break;
    case '–∞–Ω—Ç–∏—Å–ø–∞–º':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.antispam = isEnable;
      break;
    case '–∞–Ω—Ç–∏–º–∞—Ç':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiToxic = isEnable;
      break;
    case '–∞–Ω—Ç–∏–≤–∏—Ä—É—Å':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiTraba = isEnable;
      break;
    case '–∞–Ω—Ç–∏–∞—Ä–∞–±':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiArab = isEnable;
      break;
    case '–∞–Ω—Ç–∏–∞—Ä–∞–±2':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiArab2 = isEnable;
      break;
    default:
      if (!/[01]/.test(command)) return await conn.sendMessage(m.chat, {text: optionsFull}, {quoted: m});
      throw false;
  }
  conn.sendMessage(m.chat, {text: `üóÇÔ∏è –û–ø—Ü–∏—è: ${type}\nüéöÔ∏è –°—Ç–∞—Ç—É—Å: ${isEnable ? '–í–∫–ª—é—á–µ–Ω–∞' : '–í—ã–∫–ª—é—á–µ–Ω–∞'}\nüì£ –î–ª—è: ${isAll ? '–ë–æ—Ç–∞' : isUser ? '' : '–ì—Ä—É–ø–ø—ã'}`}, {quoted: m});
};
handler.help = ['en', 'dis'].map((v) => v + 'able <option>');
handler.tags = ['group', 'owner'];
handler.command = /^((en|dis)able|(–≤–∫–ª|–≤—ã–∫–ª)—é—á–∏—Ç—å|(turn)?[01])$/i;
export default handler;
